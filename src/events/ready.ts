import {
  ActionRowBuilder,
  Client,
  EmbedBuilder,
  Events,
  SelectMenuBuilder,
  TextChannel,
} from "discord.js";
import { logError } from "@services/utils/log-error";
import { identifiers } from "@components/identifiers";

const execute = async (client: Client) => {
  try {
    console.log(
      "\x1b[44m%s\x1b[0m",
      `âœ” Logado como: ${client.user!.tag}, para ${
        client.guilds.cache.size
      } servidores.`
    );

    // Temporary
    const tempChannel = client.channels.cache.get(
      identifiers.central.channels.logs
    ) as TextChannel;

    const row = new ActionRowBuilder<SelectMenuBuilder>().addComponents(
      new SelectMenuBuilder()
        .setCustomId("customize-select")
        .setPlaceholder("Selecione uma cor para seu perfil:")
        .setMinValues(1)
        .setMaxValues(1)
        .addOptions([
          {
            label: "Vermelho",
            description: "Vermelho dos olhos de um dragÃ£o jaz em seus olhos.",
            value: "1049743003306164379",
            emoji: "ðŸ”´",
          },
          {
            label: "Amarelo",
            description: "A cor do sol aquece o seu coraÃ§Ã£o.",
            value: "1049743041109438555",
            emoji: "ðŸŸ¡",
          },
          {
            label: "Azul",
            description: "O cintilar do azul do mar rema em suas aÃ§Ãµes.",
            value: "1044065564001312789",
            emoji: "ðŸ”µ",
          },
          {
            label: "Preto",
            description: "Linhas escuras revelam linhas claras.",
            value: "1044065740870922340",
            emoji: "âš«",
          },
          {
            label: "Marrom",
            description: "Em terra marrom a plantaÃ§Ã£o se aflora.",
            value: "1044065866972659742",
            emoji: "ðŸŸ¤",
          },
          {
            label: "Saphira",
            description: "A Saphira Ã© um linear entre o saber e o esquecer.",
            value: "s",
            emoji: "ðŸ§¿",
          },
          {
            label: "Ciano",
            description:
              "A dipolaridade de suas aÃ§Ãµes denota sua flexibilidade.",
            value: "c",
            emoji: "ðŸ’Ž",
          },
          {
            label: "Darkred",
            description: "A cor do sangue que corre em suas veias.",
            value: "d",
            emoji: "ðŸ§±",
          },
          {
            label: "Verde",
            description: "A cor da esperanÃ§a que renasce em seu coraÃ§Ã£o.",
            value: "v",
            emoji: "ðŸŸ¢",
          },
          {
            label: "Laranja",
            description: "A imensidÃ£o do laranja Ã© refletida em sua mente.",
            value: "l",
            emoji: "ðŸŸ ",
          },
          {
            label: "Rosa",
            description:
              "Seus sentimentos sÃ£o como o rosa, sÃ£o puros e sinceros.",
            value: "r",
            emoji: "ðŸŒº",
          },
          {
            label: "Roxo",
            description: "MistÃ©rio oculto no caminho de suas decisÃµes.",
            value: "o",
            emoji: "ðŸŸ£",
          },
          {
            label: "Violeta",
            description:
              "A faceta da realidade se molda na entropia da violeta.",
            value: "vi",
            emoji: "ðŸŒ¸",
          },
          {
            label: "Prata",
            description:
              "JustiÃ§a e guerra sÃ£o impuras perante ao pratear da noite.",
            value: "pa",
            emoji: "ðŸ”©",
          },
        ])
    );

    const exampleEmbed = new EmbedBuilder()
      .setColor("#feb412")
      .setTitle("Escolha sua cor de exibiÃ§Ã£o no servidor!")
      .setDescription(
        "Escolha cliando no menu de seleÃ§Ã£o abaixo uma cor para aparecer no servidor, tanto na lista da direita quanto ao comentar algo no chat cor do seu nome serÃ¡ alterada."
      )
      .setImage(
        "https://media.discordapp.net/attachments/558408423943700512/1050006930489360465/Banner_Cor.png"
      );

    await tempChannel.send({ embeds: [exampleEmbed], components: [row] });
  } catch (error: any) {
    await logError.log(error);
  }
};

const event: Event = {
  name: Events.ClientReady,
  description: "Evento chamado uma vez durante a inicializaÃ§Ã£o do bot.",
  once: true,
  execute,
};

export { event };
